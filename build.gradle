plugins {
    id 'java'
    id 'com.github.johnrengelman.shadow' version '8.1.1'
    id "io.freefair.lombok" version "6.5.0.2"
    id 'kr.entree.spigradle' version '2.4.3'
    id "xyz.jpenilla.run-paper" version "2.1.0"
}

group = 'cc.happyareabean'
version = '1.0.0'

def mcVersion = "1.8.8"

spigot {
    authors = ['HappyAreaBean']
    excludeLibraries = ['*']
}

repositories {
    mavenCentral()

    maven{ url = "https://repo.codemc.io/repository/nms/" }
    maven{ url = "https://repo.papermc.io/repository/maven-public/" }
    maven{ url = "https://jitpack.io" }
}

dependencies {

    // Spigot
    compileOnly("org.spigotmc:spigot:${mcVersion}-R0.1-SNAPSHOT")
    compileOnly("org.spigotmc:spigot-api:${mcVersion}-R0.1-SNAPSHOT")

    implementation 'com.github.Revxrsal.Lamp:common:3.1.5'
    implementation 'com.github.Revxrsal.Lamp:bukkit:3.1.5'
    implementation "net.kyori:adventure-api:4.13.1"
    implementation "net.kyori:adventure-platform-bukkit:4.3.0"
    implementation "net.kyori:adventure-text-minimessage:4.13.1"

    testImplementation platform('org.junit:junit-bom:5.9.1')
    testImplementation 'org.junit.jupiter:junit-jupiter'
}

def runDirectoryDir = project.hasProperty('runPaper.runDirectory') ? project.getProperty('runPaper.runDirectory') : "${project.rootProject.projectDir}/.run"
def runServerJar = project.hasProperty('runPaper.serverJar') ? project.getProperty('runPaper.serverJar') : null

tasks {
    runServer {
        // Configure the Minecraft version for our task.
        // This is the only required configuration besides applying the plugin.
        // Your plugin's jar (or shadowJar if present) will be used automatically.
        minecraftVersion(mcVersion)
        if (runServerJar != null)
            serverJar(runDirectory.file(runServerJar as String))
        runDirectory.set(file(runDirectoryDir))
    }
    shadowJar {
        archiveClassifier.set('')

        List.of(
                "net.kyori",
                "revxrsal.commands"
        ).each {
            relocate(it, "cc.happyareabean.mcdevtoolbox.shaded.${it}")
        }
    }
}

java {
    sourceCompatibility = JavaLanguageVersion.of(17)
    targetCompatibility = JavaLanguageVersion.of(17)
}

compileJava {
    options.compilerArgs += ["-parameters"]
    options.fork = true
}

test {
    useJUnitPlatform()
}